# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import remotedb_pb2 as remotedb__pb2


class RemoteDBStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.create = channel.unary_unary(
        '/remotedb.RemoteDB/create',
        request_serializer=remotedb__pb2.KVRequest.SerializeToString,
        response_deserializer=remotedb__pb2.ServerReply.FromString,
        )
    self.read = channel.unary_unary(
        '/remotedb.RemoteDB/read',
        request_serializer=remotedb__pb2.KRequest.SerializeToString,
        response_deserializer=remotedb__pb2.ServerReply.FromString,
        )
    self.update = channel.unary_unary(
        '/remotedb.RemoteDB/update',
        request_serializer=remotedb__pb2.KVRequest.SerializeToString,
        response_deserializer=remotedb__pb2.ServerReply.FromString,
        )
    self.delete = channel.unary_unary(
        '/remotedb.RemoteDB/delete',
        request_serializer=remotedb__pb2.KRequest.SerializeToString,
        response_deserializer=remotedb__pb2.ServerReply.FromString,
        )
    self.get_range = channel.unary_unary(
        '/remotedb.RemoteDB/get_range',
        request_serializer=remotedb__pb2.Request.SerializeToString,
        response_deserializer=remotedb__pb2.ServerReply.FromString,
        )


class RemoteDBServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def create(self, request, context):
    """create
    ------
    Cria uma nova entrada no banco de dados distribuidos.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def read(self, request, context):
    """read
    ----
    Le um registro no banco de dados distribuidos.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def update(self, request, context):
    """update
    ------
    Atualiza um registro no banco de dados distribuido.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def delete(self, request, context):
    """delete
    ------
    Apaga um registro no banco de dados distribuido.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_range(self, request, context):
    """get_range
    Pergunta para um servidor qual o intervalo de chaves que ele eh
    responsavel.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RemoteDBServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'create': grpc.unary_unary_rpc_method_handler(
          servicer.create,
          request_deserializer=remotedb__pb2.KVRequest.FromString,
          response_serializer=remotedb__pb2.ServerReply.SerializeToString,
      ),
      'read': grpc.unary_unary_rpc_method_handler(
          servicer.read,
          request_deserializer=remotedb__pb2.KRequest.FromString,
          response_serializer=remotedb__pb2.ServerReply.SerializeToString,
      ),
      'update': grpc.unary_unary_rpc_method_handler(
          servicer.update,
          request_deserializer=remotedb__pb2.KVRequest.FromString,
          response_serializer=remotedb__pb2.ServerReply.SerializeToString,
      ),
      'delete': grpc.unary_unary_rpc_method_handler(
          servicer.delete,
          request_deserializer=remotedb__pb2.KRequest.FromString,
          response_serializer=remotedb__pb2.ServerReply.SerializeToString,
      ),
      'get_range': grpc.unary_unary_rpc_method_handler(
          servicer.get_range,
          request_deserializer=remotedb__pb2.Request.FromString,
          response_serializer=remotedb__pb2.ServerReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'remotedb.RemoteDB', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
